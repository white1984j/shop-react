import React, {Component} from 'react'
import {connect} from 'react-redux'
import {Link} from 'react-router-dom'
import RaisedButton from 'material-ui/RaisedButton'
import CircularProgress from 'material-ui/CircularProgress'

import './style.css'
import {loadProduct, deleteCart} from 'Actions'

class Cart extends Component{
	render(){
		
		
		const getBody = () => {

				const {cart, product, loadProduct} = this.props

				if(!Object.keys(cart.products).length) return <b>The basket is empty.<br /> <Link to="/">Catalog</Link></b>

				return Object.keys(cart.products).map( (id, i) => {

						if( !product[id] )
							loadProduct(id)

						if( !product[id] || !product[id].loaded || product[id].loading )
							return <div key={id}><CircularProgress size={60} thickness={7} /></div>

						if( cart.products[id] === undefined )
							return false

						if( !Object.keys(cart.products[id]).length  )
							return <h1 key={id}>Error</h1>

						const {prop} = product[id]

						const getOffers = () => {
							return( 
								<table className="offer-table">
									<tbody>
										{Object.keys(cart.products[id]).map( (offerId,i) => 
											(
												<tr key={offerId}>
													<td><b>color</b>: {prop.offer[offerId].color}</td>
													<td><b>memory</b>: {prop.offer[offerId].memory}</td>
													<td ><b>count</b>: {cart.products[id][offerId]}</td>
													<td>
														<RaisedButton
															label="Delete"
															secondary={true}
															onClick={ this.props.deleteCart.bind(null, id, offerId, prop.offer[offerId].price) }
														 />
													</td>
												</tr>
											)
										)}
									</tbody>
								</table>								
							)
						}

						return(
							<div key={id} className="cart-path">
								<div className="cart-path__img">
									<img src={prop.image} alt={prop.name} />
								</div>
								<div className="cart-path__name">
									<h3><Link to={'/phones/'+prop.id}>{prop.name}</Link></h3>
								</div>
								{getOffers()}
							</div>
						)
			
					})
		}
		return(
			<div className="cart">
				<div className="container">
					<h1>Cart</h1>
					<div className="cart-table">
						{getBody()}
						<div className="cart-total-price">
							Итого: <b>{this.props.cart.sum}</b>
						</div>
					</div>
				</div>
			</div>
		)
	}
}

const mapStateToProps = state => ({ 
	cart: state.cart,
	product: state.product
})

const mapDispatchToProps = dispatch => ({
	loadProduct: (id) => dispatch(loadProduct(id)),
	deleteCart: (id, offerId, price) => dispatch(deleteCart(id, offerId, price))
})

//this.props.removeCart.bind(null, id, offerId)

export default connect(mapStateToProps, mapDispatchToProps)(Cart)