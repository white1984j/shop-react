import React, {Component} from 'react'
import {connect} from 'react-redux'
import CircularProgress from 'material-ui/CircularProgress'
import {loadProduct} from 'Actions'
import RaisedButton from 'material-ui/RaisedButton'
import Snackbar from 'material-ui/Snackbar'
import {Link} from 'react-router-dom'
import {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'

import './style.css'
import {addCart} from 'Actions'

class DetailedPhone extends Component{
	constructor(props){
		super(props);
		this.state = {
			color: '',
			memory: '',
			price: '',
			selectOffer: '',
			snackbarOpen: false
		}
	}

	componentDidMount(){
		if( !this.props.product  )
			this.props.loadProduct( this.props.match.params.id )
	}

	onChangeOffer = (prop, e, value) => {
		this.setState( () => ({
			[prop]: value
		}), this.calcPrice)
	}
	calcPrice = () => {
		const offers = Object.values(this.props.product.prop.offer)
		const {color, memory} = this.state
		for(var i = 0; i < offers.length; i++){
			if(offers[i].color === color && offers[i].memory === memory){
				this.setState(() => ({
					price: offers[i].price,
					selectOffer: offers[i].id
				}))
				break
			}
			if( i+1 === offers.length)
				this.setState(() => ({price: null}))
		}
	}

	buttonAddCartClick = () => {
		this.props.addCart(this.state.price ,this.props.match.params.id, this.state.selectOffer)
		this.setState({
			snackbarOpen: true,
		});
	};

	snackbarRequestClose = () => {
		this.setState({
			snackbarOpen: false,
		});
	};

	render(){

		const getBody = () => {
			const {product} = this.props
			if( !product ) return

			if( product.error )
				return <h1>Server error</h1>

			if( product.loading || !product.loaded )
				return <CircularProgress size={60} thickness={7} />

			const {prop} = product
			const self = this

			function getOffers(){
				if( !Object.values(prop.offer).length  )
					return <b>Нет в наличии</b>
				
				function property(properties) {
					const acc = Object.values(prop.offer).reduce( (acc, offer, i) => {
						acc[offer[properties]] = i
						return acc
					}, {})
					const arrAcc = Object.keys(acc)
					return(
						<RadioButtonGroup 
							name={properties} 
							//defaultSelected={arrAcc[0]}
							onChange={self.onChangeOffer.bind(this, properties)}
							className={'RadioButtonGroup-'+properties}
							style={{marginBottom: '15px'}}
						>
							{
								arrAcc.map( (item, i) => {
									return <RadioButton
										key={i}
										value={item}
										label={item}
									/>
								})
							}
						</RadioButtonGroup>
					)	
				}
				return <div>
					<div>
						<b>Color:</b>
						{property('color')}
					</div>
					<div>
						<b>Memory:</b>
						{property('memory')}
					</div>
					<div>
						<b>Price:</b>
						{(self.state.price ? self.state.price + '$' : 'Данного товара нет в наличии')}
					</div>
					<div>
						<RaisedButton 
							label="Add cart" 
							style={{marginTop: '15px'}} 
							primary={true} 
							onClick={self.buttonAddCartClick}
							disabled={ self.state.price ? false : true }
						/>
						<Snackbar
							open={self.state.snackbarOpen}
							message="Товар добавлен в корзину"
							autoHideDuration={3000}
							onRequestClose={self.snackbarRequestClose}
						/>
					</div>
				</div>
			}

			return(
				<div className="b-detailed-product">
					<div className="row">
						<div className="col-md-6">
							<div className="b-detailed-product__img txt-c">
								<img src={prop.image+1} alt={prop.name} />
							</div>
						</div>
						<div className="col-md-6">
							<h1>{prop.name}</h1>
							<div className="b-detailed-product__path">
								{prop.description}
							</div>
							<div className="b-detailed-product__path">
								{
									getOffers()
								}
							</div>
						</div>
					</div>
				</div>
			)
				
			
		}
		return(
			<div>
				<div className="container">
					<div className="row">
						<div className="col-md-9">
							{getBody()}
						</div>
						<div className="col-md-3">
							<Link to="/cart">
								<RaisedButton 
									label='Go to cart' 
									style={{width: '100%', marginBottom: '15px'}} 
									secondary={true} 
									//onClick={this.addCart}  
								/>
							</Link>
						</div>
					</div>
				</div>
			</div>
		)
	}
}

const mapStateToProps = (state, ownProps) => {
	return({
		product: (state.product[ownProps.match.params.id] === undefined ? null : state.product[ownProps.match.params.id] )
	})
}

const mapDispatchToProps = (dispatch) => {
	return({
		loadProduct: (id) => dispatch(loadProduct(id)),
		addCart: (price, productId, offerId) => dispatch(addCart(price, productId, offerId))
	})
}

export default connect(mapStateToProps, mapDispatchToProps)(DetailedPhone)