import React, {Component} from 'react'
import {connect} from 'react-redux'
import CircularProgress from 'material-ui/CircularProgress'
import {loadProduct} from 'Actions'
import RaisedButton from 'material-ui/RaisedButton'
import {Link} from 'react-router-dom'
import {RadioButton, RadioButtonGroup} from 'material-ui/RadioButton'

import './style.css'
import {addCart} from 'Actions'

class DetailedPhone extends Component{
	constructor(props){
		super(props);
		this.state = {
			addProduct: false
		}
	}

	componentDidMount(){
		if( !this.props.product  )
			this.props.loadProduct( this.props.match.params.id )
	}
	// addCart = () => {
	// 	this.setState(prevState => {
	// 		return {addProduct: true}
	// 	})
	// 	this.props.funcAddCart( this.props.phones[this.props.match.params.id].price, +this.props.match.params.id)
	//}
	render(){

		// const id = this.props.match.params.id
		// const {loading, loaded, phones} = this.props
		// const phone =  phones.reduce(  (acc,phone) => {
		// 	if(phone.id === id)
		// 		acc = phone
		// 	return acc
		// }, {})

		

		const getBody = () => {
			const {product} = this.props
			if( !product ) return

			if( product.loading || !product.loaded )
				return <CircularProgress size={60} thickness={7} />

			const {prop} = product

			function getOffers(){
				if( !prop.offer.length  )
					return <b>Нет в наличии</b>
				
				function property(properties) {
					const acc = Object.values(prop.offer).reduce( (acc, offer, i) => {
						acc[offer[properties]] = i
						return acc
					}, {})
					return Object.keys(acc).map( (item, i) => {
						return <RadioButton
							key={i}
							value={item}
							label={item}
						/>
					})
				}
				return <div>
					<div>
						<b>Color:</b>
						<RadioButtonGroup name="color" defaultSelected="gray">
							{property('color')}
						</RadioButtonGroup>
					</div>
					<div>
						<b>Memory:</b>
						<RadioButtonGroup name="memory">
							{property('memory')}
						</RadioButtonGroup>
					</div>
				</div>
				
				// return(
				// 	<RadioButtonGroup name="shipSpeed" defaultSelected="not_light">
				// 		{colors()}
				// 	</RadioButtonGroup>
				// )
			}

			return(
				<div className="b-detailed-product">
					<div className="row">
						<div className="col-md-6">
							<div className="b-detailed-product__img txt-c">
								<img src={prop.image} alt={prop.name} />
							</div>
						</div>
						<div className="col-md-6">
							<h1>{prop.name}</h1>
							<div className="b-detailed-product__path">
								{prop.description}
							</div>
							<div className="b-detailed-product__path">
								{
									getOffers()
								}
							</div>
						</div>
					</div>
				</div>
			)
				
			
		}
		return(
			<div>
				<div className="container">
					<div className="row">
						<div className="col-md-9">
							{getBody()}
						</div>
						<div className="col-md-3">
							<RaisedButton 
								label={this.state.addProduct ? 'Added' : 'Add cart'} 
								style={{width: '100%', marginBottom: '15px'}} 
								primary={ this.state.addProduct ? false : true} 
								secondary={ this.state.addProduct ? true : false} 
								onClick={this.addCart}  
							/>
							<Link to="/cart">
								<RaisedButton 
									label='Go to cart' 
									style={{width: '100%', marginBottom: '15px'}} 
									secondary={true} 
									onClick={this.addCart}  
								/>
							</Link>
						</div>
					</div>
				</div>
			</div>
		)
	}
}

const mapStateToProps = (state, ownProps) => {
	return({
		product: (state.product[ownProps.match.params.id] === undefined ? null : state.product[ownProps.match.params.id] )
	})
}

const mapDispatchToProps = (dispatch) => {
	return({
		loadProduct: (id) => dispatch(loadProduct(id)),
		funcAddCart: (price, id) => dispatch(addCart(price, id))
	})
}

export default connect(mapStateToProps, mapDispatchToProps)(DetailedPhone)