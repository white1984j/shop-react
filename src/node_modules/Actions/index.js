import { 
	START, 
	SUCCESS, 
	FAILURE,
	LOAD_PRODUCTS,
	ADD_CART,
	SEARCH,
	FILTER_BRANDS,
	LOAD_PRODUCT
} from 'constans'

export function loadProduct(id){
	const linkMocky = {
		id1: 'http://www.mocky.io/v2/5ad20be42d00000e005c969a?mocky-delay=1500ms',
		id2: 'http://www.mocky.io/v2/5acfa89531000029004eaa4b?mocky-delay=1500ms',
		id3: 'http://www.mocky.io/v2/5acfa8f931000066004eaa4c?mocky-delay=1500ms',
		id4: 'http://www.mocky.io/v2/5acfa93a31000065004eaa4e?mocky-delay=1500ms',
		id5: 'http://www.mocky.io/v2/5acfa97431000063004eaa4f?mocky-delay=1500ms',
		id6: 'http://www.mocky.io/v2/5acfa9a331000066004eaa50?mocky-delay=1500ms',
	}
	return (dispatch) => {
		dispatch({
			type: LOAD_PRODUCT + START,
			payload: {id}
		})
		console.log( linkMocky[id] )
		const link = linkMocky[id]
		fetch( link )
			.then(res => {
          if (res.status >= 400) {
              throw new Error(res.statusText)
          }
          return res.json()
      })
      .then(res =>{
      	return dispatch({
          type: LOAD_PRODUCT + SUCCESS,
          payload: {id, res}
      	})}
      )
			.catch( (err) => {
				dispatch({
					type: LOAD_PRODUCT+FAILURE,
					payload: {id}
				})
			})
	}
}

export function loadCatalog(){
	return (dispatch) => {
		dispatch({
			type: LOAD_PRODUCTS+START
		})
		// http://www.mocky.io/v2/5ace4d412e00002f00c2c25a
		fetch('http://www.mocky.io/v2/5acf55573100005f004ea8df?mocky-delay=1000ms')
			.then(res => {
          if (res.status >= 400) {
              throw new Error(res.statusText)
          }
          return res.json()
      })
      .then(res =>{
      	return dispatch({
          type: LOAD_PRODUCTS + SUCCESS,
          payload: res
      	})}
      )
			.catch( (err) => {
				dispatch({
					type: LOAD_PRODUCTS+FAILURE
			})
		})
	}
}

export function addCart(price, id){
	console.log(arguments)
	return({
		type: ADD_CART,
		payload: {price, id}
	})
}

export function search(search){
	return({
		type: SEARCH,
		payload: search
	})
}

export function filterBrands(checkboxes){
	return({
		type: FILTER_BRANDS,
		payload: checkboxes
	})
}